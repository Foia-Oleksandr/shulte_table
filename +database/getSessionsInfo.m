function sessions = getSessionsInfo(limit)
if nargin == 0
    limit = 500;
end

lastSessionsQuery = ...
"WITH session_with_properties AS (SELECT s.id," + newline + ...
"                                        s.begin_at," + newline + ...
"                                        s.finish_at," + newline + ...
"                                        s.complexity || 'x' || s.complexity   as size," + newline + ...
"                                        json_group_array(ifnull(p.value, '')) as properties," + newline + ...
"                                        s.view" + newline + ...
"                                 FROM session s" + newline + ...
"                                          LEFT JOIN property p on s.id = p.session_id" + newline + ...
"                                 GROUP BY s.id)" + newline + ...
"SELECT sp.id," + newline + ...
"       sp.begin_at," + newline + ...
"       sp.finish_at," + newline + ...
"       sp.size," + newline + ...
"       sp.properties," + newline + ...
"       sp.view," + newline + ...
"       min(r.task_duration) as min," + newline + ...
"       max(r.task_duration) as max" + newline + ...
"FROM session_with_properties sp" + newline + ...
"         JOIN result r ON r.session_id = sp.id" + newline + ...
"         LEFT JOIN property p on sp.id = p.session_id" + newline + ...
"GROUP BY p.session_id, r.session_id" + newline + ...
"ORDER BY sp.id DESC" + newline + ...
"LIMIT %d;";

query = sprintf(lastSessionsQuery, limit);
results = database.fetchData(query);

if isempty(results)
    sessions = model.SessionInfo.empty;
else
    for k = height(results):-1:1
        sessions(k) = model.SessionInfo( ...
            results{k, 'id'}, ...
            datetime(results{k, 'begin_at'}, 'ConvertFrom', 'posixtime'), ...
            datetime(results{k, 'finish_at'}, 'ConvertFrom', 'posixtime'), ...
            results{k, 'size'}, ...
            model.ShulteTableOrder.charToProperties(results{k, 'properties'}), ...
            model.ShulteTableView.(results{k, 'view'}), ...
            results{k, 'min'}, ...
            results{k, 'max'});
    end
end

mustBeA(sessions, "model.SessionInfo");
end
