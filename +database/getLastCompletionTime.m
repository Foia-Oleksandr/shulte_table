function completionTimes = getLastCompletionTime()

lastCompletionTimesQuery = ...
"WITH" + newline + ...
"    session_with_properties AS (SELECT s.id," + newline + ...
"                                        s.begin_at," + newline + ...
"                                        s.finish_at," + newline + ...
"                                        s.complexity," + newline + ...
"                                        json_group_array(ifnull(p.value, '')) as properties," + newline + ...
"                                        s.view" + newline + ...
"                                 FROM session s" + newline + ...
"                                          LEFT JOIN property p on s.id = p.session_id" + newline + ...
"                                 GROUP BY s.id)," + newline + ...
"    last_session AS (SELECT max(id) as id, begin_at, finish_at, complexity, properties, view" + newline + ...
"                      FROM session_with_properties" + newline + ...
"                      GROUP BY complexity, properties, view" + newline + ...
"                      ORDER BY complexity ASC)" + newline + ...
"SELECT min(r.task_duration) as time, ls.begin_at, ls.complexity || 'x' || ls.complexity as size, ls.properties, ls.view, r.mistakes" + newline + ...
"FROM result r" + newline + ...
"         INNER JOIN last_session ls on ls.id = r.session_id" + newline + ...
"WHERE r.session_id IN (SELECT id FROM last_session)" + newline + ...
"GROUP BY r.session_id" + newline + ...
"ORDER BY ls.complexity ASC;";

results = database.fetchData(lastCompletionTimesQuery);

if isempty(results)
    completionTimes = model.CompletionTime.empty;
else
    for k = height(results):-1:1

        completionTimes(k) = model.CompletionTime( ...
            results{k, 'size'}, ...
            model.ShulteTableView.(results{k, 'view'}), ...
            model.ShulteTableOrder.charToProperties(results{k, 'properties'}), ...
            results{k, 'time'}, ...
            datetime(results{k, 'begin_at'}, 'ConvertFrom', 'posixtime'), ...
            results{k, 'mistakes'});
    end
end

end

